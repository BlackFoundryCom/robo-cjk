Searching 35 files for "DesignFrameDrawer"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Drawer.py:
   87  #                     drawGlyph(self.c.glyph)
   88                  
   89: #                 DesignFrameDrawer(self.c).draw(scale = self.scale)
   90  
   91  #         except Exception as e:
   92  #             print(e)
   93  
   94: class DesignFrameDrawer():
   95  
   96      def __init__(self, controller):

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
  681          s = info['scale']
  682          strokeWidth(.6*s)
  683:         Drawer.DesignFrameDrawer(self).draw()
  684  
  685      def _windowWillClose(self, sender):

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/drawers/ProjectCanvas.py:
    5  
    6  from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
    7: from drawers.DesignFrameDrawer import DesignFrameDrawer
    8  
    9  class ProjectCanvas():
   ..
   89                      drawGlyph(self.c.glyph)
   90                  
   91:                 DesignFrameDrawer(self.c).draw(scale = self.scale)
   92  
   93          except Exception as e:

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/DesignFrame.py:
    7  # reload(Drawer)
    8  
    9: from drawers.DesignFrameDrawer import DesignFrameDrawer
   10  
   11  class DesignFrame(Group):
   ..
  160          s = info['scale']
  161          strokeWidth(.6*s)
  162:         DesignFrameDrawer(self.ui).draw(
  163              mainFrames = self.showMainFrames, 
  164              secondLines = self.showSecondLines, 

9 matches across 4 files


Searching 35 files for "drawer."

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/MiniFonts.py:
   73          self.glyph = self.ui.glyph
   74          if self.glyph is None: return
   75:         Drawer.MiniFont_HighlightComponent(self.ui)
   76  
   77  class InjectBack():

1 match in 1 file


Searching 35 files for "DesignFrameDrawer"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Drawer.py:
   87  #                     drawGlyph(self.c.glyph)
   88                  
   89: #                 DesignFrameDrawer(self.c).draw(scale = self.scale)
   90  
   91  #         except Exception as e:
   92  #             print(e)
   93  
   94: # class DesignFrameDrawer():
   95  
   96  #     def __init__(self, controller):

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   20  from drawers.ProjectCanvas import ProjectCanvas
   21  from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
   22: from drawers.DesignFrameDrawer import DesignFrameDrawer
   23  # import Drawer
   24  # reload(Drawer)
   ..
  682          s = info['scale']
  683          strokeWidth(.6*s)
  684:         DesignFrameDrawer(self).draw()
  685  
  686      def _windowWillClose(self, sender):

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/drawers/DesignFrameDrawer.py:
    3  
    4  
    5: class DesignFrameDrawer():
    6  
    7      def __init__(self, controller):

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/drawers/ProjectCanvas.py:
    5  
    6  from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
    7: from drawers.DesignFrameDrawer import DesignFrameDrawer
    8  
    9  class ProjectCanvas():
   ..
   89                      drawGlyph(self.c.glyph)
   90                  
   91:                 DesignFrameDrawer(self.c).draw(scale = self.scale)
   92  
   93          except Exception as e:

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/DesignFrame.py:
    7  # reload(Drawer)
    8  
    9: from drawers.DesignFrameDrawer import DesignFrameDrawer
   10  
   11  class DesignFrame(Group):
   ..
  160          s = info['scale']
  161          strokeWidth(.6*s)
  162:         DesignFrameDrawer(self.ui).draw(
  163              mainFrames = self.showMainFrames, 
  164              secondLines = self.showSecondLines, 

12 matches across 5 files


Searching 35 files for "drawer."

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/MiniFonts.py:
   73          self.glyph = self.ui.glyph
   74          if self.glyph is None: return
   75:         Drawer.MiniFont_HighlightComponent(self.ui)
   76  
   77  class InjectBack():

1 match in 1 file


Searching 35 files for "import drawer"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   21  from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
   22  from drawers.DesignFrameDrawer import DesignFrameDrawer
   23: # import Drawer
   24  # reload(Drawer)
   25  

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/__init__.py:
   14  reload(Sheets)
   15  from Sheets import ProjectEditor, Preferences
   16: import Drawer
   17  reload(Drawer)
   18  import offTools.PowerRuler as PowerRuler

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/DesignFrame.py:
    4  from mojo.drawingTools import *
    5  from imp import reload
    6: # import Drawer
    7  # reload(Drawer)
    8  

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/MiniFonts.py:
   14  import Helpers
   15  reload(Helpers)
   16: import Drawer
   17  reload(Drawer)
   18  from Helpers import GitHelper, unique

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/ReferenceViewer.py:
    3  from mojo.UI import UpdateCurrentGlyphView
    4  from imp import reload
    5: # import Drawer
    6  # reload(Drawer)
    7  

5 matches across 5 files


Searching 35 files for "import drawer"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   21  from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
   22  from drawers.DesignFrameDrawer import DesignFrameDrawer
   23: # import Drawer
   24  # reload(Drawer)
   25  

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/__init__.py:
   14  reload(Sheets)
   15  from Sheets import ProjectEditor, Preferences
   16: import Drawer
   17  reload(Drawer)
   18  import offTools.PowerRuler as PowerRuler

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/DesignFrame.py:
    4  from mojo.drawingTools import *
    5  from imp import reload
    6: # import Drawer
    7  # reload(Drawer)
    8  

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/MiniFonts.py:
   14  import Helpers
   15  reload(Helpers)
   16: import Drawer
   17  reload(Drawer)
   18  from Helpers import GitHelper, unique

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/ReferenceViewer.py:
    3  from mojo.UI import UpdateCurrentGlyphView
    4  from imp import reload
    5: # import Drawer
    6  # reload(Drawer)
    7  

5 matches across 5 files


Searching 35 files for "import drawer"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   21  from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
   22  from drawers.DesignFrameDrawer import DesignFrameDrawer
   23: # import Drawer
   24  # reload(Drawer)
   25  

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/__init__.py:
   14  reload(Sheets)
   15  from Sheets import ProjectEditor, Preferences
   16: # import Drawer
   17  # reload(Drawer)
   18  import offTools.PowerRuler as PowerRuler

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/DesignFrame.py:
    4  from mojo.drawingTools import *
    5  from imp import reload
    6: # import Drawer
    7  # reload(Drawer)
    8  

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/MiniFonts.py:
   14  import Helpers
   15  reload(Helpers)
   16: import Drawer
   17  reload(Drawer)
   18  from Helpers import GitHelper, unique

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/ReferenceViewer.py:
    3  from mojo.UI import UpdateCurrentGlyphView
    4  from imp import reload
    5: # import Drawer
    6  # reload(Drawer)
    7  

5 matches across 5 files


Searching 35 files for "import Drawer"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   21  from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
   22  from drawers.DesignFrameDrawer import DesignFrameDrawer
   23: # import Drawer
   24  # reload(Drawer)
   25  

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/__init__.py:
   14  reload(Sheets)
   15  from Sheets import ProjectEditor, Preferences
   16: # import Drawer
   17  # reload(Drawer)
   18  import offTools.PowerRuler as PowerRuler

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/DesignFrame.py:
    4  from mojo.drawingTools import *
    5  from imp import reload
    6: # import Drawer
    7  # reload(Drawer)
    8  

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/MiniFonts.py:
   14  import Helpers
   15  reload(Helpers)
   16: # import Drawer
   17  # reload(Drawer)
   18  from Helpers import GitHelper, unique

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/ReferenceViewer.py:
    3  from mojo.UI import UpdateCurrentGlyphView
    4  from imp import reload
    5: # import Drawer
    6  # reload(Drawer)
    7  

5 matches across 5 files


Searching 35 files for "from drawer"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   18  import Global
   19  reload(Global)
   20: from drawers.ProjectCanvas import ProjectCanvas
   21: from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
   22: from drawers.DesignFrameDrawer import DesignFrameDrawer
   23  # import Drawer
   24  # reload(Drawer)

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/drawers/ProjectCanvas.py:
    4  from mojo.roboFont import *
    5  
    6: from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
    7: from drawers.DesignFrameDrawer import DesignFrameDrawer
    8  
    9  class ProjectCanvas():

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/DesignFrame.py:
    7  # reload(Drawer)
    8  
    9: from drawers.DesignFrameDrawer import DesignFrameDrawer
   10  
   11  class DesignFrame(Group):

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/MiniFonts.py:
    5  from mojo.UI import AccordionView, UpdateCurrentGlyphView
    6  
    7: from drawer.MiniFont_HighlightComponentDrawer import MiniFont_HighlightComponent
    8  
    9  from fontTools.pens.recordingPen import DecomposingRecordingPen

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/ReferenceViewer.py:
    6  # reload(Drawer)
    7  
    8: from drawers.ReferenceViewerDrawer import ReferenceViewerDraw
    9  
   10  class ReferenceViewer(Group):

8 matches across 5 files


Searching 34 files for "ProjectEditor"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   22  from drawers.DesignFrameDrawer import DesignFrameDrawer
   23  
   24: class ProjectEditor():
   25  
   26      #DATA for project file

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/__init__.py:
   13  import Sheets
   14  reload(Sheets)
   15: from Sheets import ProjectEditor, Preferences
   16  import offTools.PowerRuler as PowerRuler
   17  reload(PowerRuler)
   ..
   33  rdir = os.path.abspath(os.path.join(cwd, os.pardir))
   34  
   35: ProjectEditorPDF = os.path.join(rdir, "Ressources/ProjectEditor.pdf")
   36  PreferencesPDF = os.path.join(rdir, "Ressources/Preferences.pdf")
   37  SpaceCenterPDF = os.path.join(rdir, "Ressources/SpaceCenter.pdf")
   ..
   66          toolbarItems = [
   67              {
   68:                 'itemIdentifier': "projectEditor",
   69                  'label': 'Projects Editor',
   70                  'callback': self._projectsSettings_callback,
   71:                 'imagePath': ProjectEditorPDF
   72              },
   73              {
   ..
  158  
  159      def _projectsSettings_callback(self, sender):
  160:         ProjectEditor(self)
  161  
  162      def _preference_callback(self, sender):

7 matches across 2 files


Searching 34 files for "ProjectEditor"

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   22  from drawers.DesignFrameDrawer import DesignFrameDrawer
   23  
   24: class ProjectEditor():
   25  
   26      #DATA for project file

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/__init__.py:
   13  import Sheets
   14  reload(Sheets)
   15: from Sheets import ProjectEditor, Preferences
   16  import offTools.PowerRuler as PowerRuler
   17  reload(PowerRuler)
   ..
   33  rdir = os.path.abspath(os.path.join(cwd, os.pardir))
   34  
   35: ProjectEditorPDF = os.path.join(rdir, "Ressources/ProjectEditor.pdf")
   36  PreferencesPDF = os.path.join(rdir, "Ressources/Preferences.pdf")
   37  SpaceCenterPDF = os.path.join(rdir, "Ressources/SpaceCenter.pdf")
   ..
   66          toolbarItems = [
   67              {
   68:                 'itemIdentifier': "projectEditor",
   69                  'label': 'Projects Editor',
   70                  'callback': self._projectsSettings_callback,
   71:                 'imagePath': ProjectEditorPDF
   72              },
   73              {
   ..
  158  
  159      def _projectsSettings_callback(self, sender):
  160:         ProjectEditor(self)
  161  
  162      def _preference_callback(self, sender):

7 matches across 2 files


Searching 34 files for "ProjectEditor("

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/Sheets.py:
   22  from drawers.DesignFrameDrawer import DesignFrameDrawer
   23  
   24: class ProjectEditor():
   25  
   26      #DATA for project file

/Users/Gaetan/Documents/BlackFoundry/TECH/robofont_ext/RoboCJK/EXT/lib/interface/__init__.py:
  158  
  159      def _projectsSettings_callback(self, sender):
  160:         ProjectEditor(self)
  161  
  162      def _preference_callback(self, sender):

2 matches across 2 files
